@model Writing.Platform.Models.ViewModel.RegisterAccountRequest
@{
}

<div class="container">

    <div class="mt-5" style="max-width:400px; margin:auto">
        <h3>Register</h3>
        <form method="post" onsubmit="return validatePasswords()">
            <div class="mb-3">
                <label for="userName" class="form-label">User Name</label>
                <input type="text" class="form-control" id="userName" asp-for="userName" required>
            </div>
            <div class="mb-3">
                <label for="registerEmail" class="form-label">Email address</label>
                <input type="email" class="form-control" id="registerEmail" asp-for="Email" required>
            </div>
            <div class="mb-3">
                <label for="registerPassword" class="form-label">Password</label>
                <input type="password" class="form-control" id="registerPassword" asp-for="Password" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W).{8,}" title="Must contain at least one number, one uppercase and lowercase letter, and at least 8 or more characters" required>
            </div>
            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input type="password" class="form-control" id="confirmPassword"
                       title="Password does not match" required>
                <div class="text-danger" id="passwordError" style="display: none;">Passwords do not match</div>
            </div>
            <button type="submit" class="btn btn-dark w-100">Register</button>
        </form>
    </div>

</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const password = document.getElementById("registerPassword");
        const confirmPassword = document.getElementById("confirmPassword");
        const passwordError = document.getElementById("passwordError");

        function validatePassword() {
            if (confirmPassword.value !== password.value) {
                confirmPassword.setCustomValidity("Passwords do not match");
                passwordError.style.display = "block";
            } else {
                confirmPassword.setCustomValidity("");
                passwordError.style.display = "none";
            }
        }

        password.addEventListener("input", validatePassword);
        confirmPassword.addEventListener("input", validatePassword);
    });
</script>


